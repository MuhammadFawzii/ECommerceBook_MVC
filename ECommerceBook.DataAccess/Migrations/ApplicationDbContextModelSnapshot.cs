// <auto-generated />
using System;
using ECommerceBook.DataAcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceBook.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceBook.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Scifi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("ECommerceBook.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ListPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Price100")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Price50")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "John Doe",
                            CategoryId = 1,
                            Description = "Learn the basics of C# programming.",
                            ISBN = "978-1-234567-89-0",
                            ImageUrl = "",
                            ListPrice = 49.990000000000002,
                            Price = 45.990000000000002,
                            Price100 = 35.990000000000002,
                            Price50 = 40.990000000000002,
                            Title = "C# Fundamentals"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jane Smith",
                            CategoryId = 1,
                            Description = "A guide to ASP.NET Core development.",
                            ISBN = "978-1-234567-89-1",
                            ImageUrl = "",
                            ListPrice = 59.990000000000002,
                            Price = 55.990000000000002,
                            Price100 = 45.990000000000002,
                            Price50 = 50.990000000000002,
                            Title = "ASP.NET Core Essentials"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Mike Brown",
                            CategoryId = 2,
                            Description = "Master EF Core for database interactions.",
                            ISBN = "978-1-234567-89-2",
                            ImageUrl = "",
                            ListPrice = 39.990000000000002,
                            Price = 35.990000000000002,
                            Price100 = 25.989999999999998,
                            Price50 = 30.989999999999998,
                            Title = "Entity Framework Core in Action"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Sarah Connor",
                            CategoryId = 2,
                            Description = "Learn how to build web apps with Blazor.",
                            ISBN = "978-1-234567-89-3",
                            ImageUrl = "",
                            ListPrice = 69.989999999999995,
                            Price = 65.989999999999995,
                            Price100 = 55.990000000000002,
                            Price50 = 60.990000000000002,
                            Title = "Blazor WebAssembly Unleashed"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Robert Martin",
                            CategoryId = 3,
                            Description = "Building scalable microservices using .NET.",
                            ISBN = "978-1-234567-89-4",
                            ImageUrl = "",
                            ListPrice = 79.989999999999995,
                            Price = 75.989999999999995,
                            Price100 = 65.989999999999995,
                            Price50 = 70.989999999999995,
                            Title = "Microservices with .NET"
                        });
                });

            modelBuilder.Entity("ECommerceBook.Models.Product", b =>
                {
                    b.HasOne("ECommerceBook.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerceBook.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
